// Code generated by "esc -o frontend/static.go -pkg frontend frontend/static"; DO NOT EDIT.

package frontend

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	"path"
	"sync"
	"time"
)

type _escLocalFS struct{}

var _escLocal _escLocalFS

type _escStaticFS struct{}

var _escStatic _escStaticFS

type _escDirectory struct {
	fs   http.FileSystem
	name string
}

type _escFile struct {
	compressed string
	size       int64
	modtime    int64
	local      string
	isDir      bool

	once sync.Once
	data []byte
	name string
}

func (_escLocalFS) Open(name string) (http.File, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	return os.Open(f.local)
}

func (_escStaticFS) prepare(name string) (*_escFile, error) {
	f, present := _escData[path.Clean(name)]
	if !present {
		return nil, os.ErrNotExist
	}
	var err error
	f.once.Do(func() {
		f.name = path.Base(name)
		if f.size == 0 {
			return
		}
		var gr *gzip.Reader
		b64 := base64.NewDecoder(base64.StdEncoding, bytes.NewBufferString(f.compressed))
		gr, err = gzip.NewReader(b64)
		if err != nil {
			return
		}
		f.data, err = ioutil.ReadAll(gr)
	})
	if err != nil {
		return nil, err
	}
	return f, nil
}

func (fs _escStaticFS) Open(name string) (http.File, error) {
	f, err := fs.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.File()
}

func (dir _escDirectory) Open(name string) (http.File, error) {
	return dir.fs.Open(dir.name + name)
}

func (f *_escFile) File() (http.File, error) {
	type httpFile struct {
		*bytes.Reader
		*_escFile
	}
	return &httpFile{
		Reader:   bytes.NewReader(f.data),
		_escFile: f,
	}, nil
}

func (f *_escFile) Close() error {
	return nil
}

func (f *_escFile) Readdir(count int) ([]os.FileInfo, error) {
	if !f.isDir {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is not directory", f.name)
	}

	fis, ok := _escDirs[f.local]
	if !ok {
		return nil, fmt.Errorf(" escFile.Readdir: '%s' is directory, but we have no info about content of this dir, local=%s", f.name, f.local)
	}
	limit := count
	if count <= 0 || limit > len(fis) {
		limit = len(fis)
	}

	if len(fis) == 0 && count > 0 {
		return nil, io.EOF
	}

	return fis[0:limit], nil
}

func (f *_escFile) Stat() (os.FileInfo, error) {
	return f, nil
}

func (f *_escFile) Name() string {
	return f.name
}

func (f *_escFile) Size() int64 {
	return f.size
}

func (f *_escFile) Mode() os.FileMode {
	return 0
}

func (f *_escFile) ModTime() time.Time {
	return time.Unix(f.modtime, 0)
}

func (f *_escFile) IsDir() bool {
	return f.isDir
}

func (f *_escFile) Sys() interface{} {
	return f
}

// FS returns a http.Filesystem for the embedded assets. If useLocal is true,
// the filesystem's contents are instead used.
func FS(useLocal bool) http.FileSystem {
	if useLocal {
		return _escLocal
	}
	return _escStatic
}

// Dir returns a http.Filesystem for the embedded assets on a given prefix dir.
// If useLocal is true, the filesystem's contents are instead used.
func Dir(useLocal bool, name string) http.FileSystem {
	if useLocal {
		return _escDirectory{fs: _escLocal, name: name}
	}
	return _escDirectory{fs: _escStatic, name: name}
}

// FSByte returns the named file from the embedded assets. If useLocal is
// true, the filesystem's contents are instead used.
func FSByte(useLocal bool, name string) ([]byte, error) {
	if useLocal {
		f, err := _escLocal.Open(name)
		if err != nil {
			return nil, err
		}
		b, err := ioutil.ReadAll(f)
		_ = f.Close()
		return b, err
	}
	f, err := _escStatic.prepare(name)
	if err != nil {
		return nil, err
	}
	return f.data, nil
}

// FSMustByte is the same as FSByte, but panics if name is not present.
func FSMustByte(useLocal bool, name string) []byte {
	b, err := FSByte(useLocal, name)
	if err != nil {
		panic(err)
	}
	return b
}

// FSString is the string version of FSByte.
func FSString(useLocal bool, name string) (string, error) {
	b, err := FSByte(useLocal, name)
	return string(b), err
}

// FSMustString is the string version of FSMustByte.
func FSMustString(useLocal bool, name string) string {
	return string(FSMustByte(useLocal, name))
}

var _escData = map[string]*_escFile{

	"/frontend/static/ui/favicon.ico": {
		name:    "favicon.ico",
		local:   "frontend/static/ui/favicon.ico",
		size:    5558,
		modtime: 1644474369,
		compressed: `
H4sIAAAAAAAC/+yYWUhUYRTHf5otZogTlhgUQ4sNLUQkhUGQy1OUUr20QL21SESQIBXRS1D2FOFDSQVC
tFAvRQUVBdH2Fu37HgiRPhgtZGZxmDPw8XG3uTNXW+bAYZh7v3P+93zfWT/II594XH7jJGJQAZSUJP+v
K4D6GCSAODCf5PMc/Rc0iuTRD+kHrGEkXW8p0AJcBjqAb8BdoA1YkkW8cnXnJuAY8Aj4Avzy4Q0hsIqB
GcAqYB9wA/gYAMuJO4HSAJhVwA7gDPAa6AmJZ7Ps03Af7LFAV5bwbG4MYHtLFnA6XPxhfQDbOzPEfg5M
ArY7vPsErPXAb8gQ+z1QafjtA5d1bt/QmCH+MktfPdDnsK5b49emrgzO+y1wERhh6WxzkZEYnmWtfRoC
+zEwDZgA3Nd8FNO8K1wGvHSRvQ4UGvjjgc9pYlcY8lOAXuCNxrq8f+ijs93KCctVzg/7noWdqjmvQuxh
K5Bv6JH926p+4rReznmMiw9PBg7qHtSqrx/2OAPhH3qGNs0Grmpcib37VefgAHlsL3DA+D8aOAX8dPmG
hS56CqSlC4hp1+RLwCbjWalHfmuKoC8Yp/6XivU6D/vrIupNajQuy/X8BOuOhX0FGBphf7QRuAl8AM45
5KSaiPszia0XirXCiu8erVdR0wnFWw28M/B3WrEfFZVpb/EEWAPcArb0c0+eB5zUvSgcoLmgWPNn5QDO
JpLLBuVGtBz9SZTQQhv/O+9JzBl8l87g0rtsA4oc1o8EqoHNwFGt024zdIMlW6RzsFdP16u/0ntOtOQX
+cieVzu+a79wRO1L0VkP2W6dO4T2GPNHq+ZfoUMusheA6do/Sm3Ybdhhzq+Sv5qNe4A+7e1i+n4B8Aw4
rfUmJS/2zDXsmKo65znkw5nASp1nrhk6mtPwicV67yJ+8FVrfW2aftWuviTyt0PU6jnAcb3LqA7p21XK
/wT9DgAA//+iF9JEthUAAA==
`,
	},

	"/frontend/static/ui/index.html": {
		name:    "index.html",
		local:   "frontend/static/ui/index.html",
		size:    473,
		modtime: 1644474369,
		compressed: `
H4sIAAAAAAAC/4zRsU7DMBAG4L1PcXivrSZSxeBkASQGEAxdGF370jhN7OBzS8LTo8TtEBUhJt9Zvz79
suXd49vD7uP9CZ53ry/lStaxa6cDlSlXAACyte4IAduCWe0dgzj2WDDbqQOKYZ3uyH4jFWyzHTZbyLMh
zxjUAauCVeo8RbjVnt2AFMcWqUaM17gQ2jj+hXs7cO07geaAgo7WkdC+65WOXBNdS0Qcopj2i0w62D4C
BT1L3iBvPk8YxtlK4zrnGd/wzjreLKFGnVUSWClFmn6Hbyum9V+gFOlx5d6bsVwtbOsM/sWArlUgjAU7
xWp9v2Qvnpi/8CcAAP//dkFAYtkBAAA=
`,
	},

	"/frontend/static/ui/index.js": {
		name:    "index.js",
		local:   "frontend/static/ui/index.js",
		size:    7429,
		modtime: 1644548557,
		compressed: `
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
`,
	},

	"/frontend/static/ui/logo-32.png": {
		name:    "logo-32.png",
		local:   "frontend/static/ui/logo-32.png",
		size:    1860,
		modtime: 1644474369,
		compressed: `
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
T0+tAAAAAElFTkSuQmCCAQAA///00uMzRAcAAA==
`,
	},

	"/frontend/static/ui/logo-96.png": {
		name:    "logo-96.png",
		local:   "frontend/static/ui/logo-96.png",
		size:    3901,
		modtime: 1644474369,
		compressed: `
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
QEecSAAAAABJRU5ErkJgggEAAP//VZ1AOT0PAAA=
`,
	},

	"/frontend/static": {
		name:  "static",
		local: `frontend/static`,
		isDir: true,
	},

	"/frontend/static/ui": {
		name:  "ui",
		local: `frontend/static/ui`,
		isDir: true,
	},
}

var _escDirs = map[string][]os.FileInfo{

	"frontend/static": {
		_escData["/frontend/static/ui"],
	},

	"frontend/static/ui": {
		_escData["/frontend/static/ui/favicon.ico"],
		_escData["/frontend/static/ui/index.html"],
		_escData["/frontend/static/ui/index.js"],
		_escData["/frontend/static/ui/logo-32.png"],
		_escData["/frontend/static/ui/logo-96.png"],
	},
}
